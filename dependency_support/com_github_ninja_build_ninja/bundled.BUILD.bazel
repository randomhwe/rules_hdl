# Ninja, a small build system with a focus on speed.

srcs = [
    "src/build.cc",
    "src/build_log.cc",
    "src/clean.cc",
    "src/clparser.cc",
    "src/debug_flags.cc",
    "src/depfile_parser.cc",
    "src/deps_log.cc",
    "src/disk_interface.cc",
    "src/dyndep.cc",
    "src/dyndep_parser.cc",
    "src/edit_distance.cc",
    "src/eval_env.cc",
    "src/graph.cc",
    "src/graphviz.cc",
    "src/lexer.cc",
    "src/line_printer.cc",
    "src/manifest_parser.cc",
    "src/metrics.cc",
    "src/missing_deps.cc",
    "src/ninja.cc",
    "src/json.cc",
    "src/parser.cc",
    "src/state.cc",
    "src/status.cc",
    "src/string_piece_util.cc",
    "src/util.cc",
    "src/version.cc",
]

srcs_posix = ["src/subprocess-posix.cc"]

srcs_win32 = [
    "src/getopt.c",
    "src/includes_normalize-win32.cc",
    "src/minidump-win32.cc",
    "src/msvc_helper-win32.cc",
    "src/msvc_helper_main-win32.cc",
    "src/subprocess-win32.cc",
]

cc_binary(
    name = "ninja",
    srcs = glob(["src/*.h"]) +
           srcs +
           select({
               "//conditions:default": srcs_posix,
               "@bazel_tools//src/conditions:darwin": srcs_posix,
               "@bazel_tools//src/conditions:windows": srcs_win32,
           }),
    copts = [
        "-Wno-implicit-fallthrough",
        "-Wno-non-virtual-dtor",
        "-Wno-macro-redefined",
        "$(STACK_FRAME_UNLIMITED)",
    ],
    visibility = ["//visibility:public"],
)

# Expose prebuilt binaries for opensourced projects that require them to build.
filegroup(
    name = "ninja_binaries",
    srcs = glob(["files/bin/**"]) + [
        "README.md",
    ],
    visibility = ["//visibility:public"],
)